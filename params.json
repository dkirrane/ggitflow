{"name":"Groovy Gitflow","tagline":"Groovy implementation of the Gitflow branching model","body":"### Groovy Gitflow\r\nGGitflow provides a Groovy implementation for Vincent Driessen's branching model \r\nhttp://nvie.com/posts/a-successful-git-branching-model/\r\n\r\n### Initialise repository for Gitflow\r\n```\r\n// Use default branch and prefix names for Gitflow\r\ndef repoDir = new File(\"/path/to/git/repo/base/directory\")\r\ndef init = new GitflowInit(repoDir:repoDir)\r\ninit.cmdDefault()\r\n\r\n// Use your own preferred branch and prefix names for Gitflow\r\ndef init = new GitflowInit(repoDir:repoDir,masterBrnName:'production',developBrnName:'integration',featureBrnPref:'feat/',releaseBrnPref:'rel/',hotfixBrnPref:'fix/',supportBrnPref:'maintenance/',versionTagPref:'version')\r\ninit.cmdDefault()\r\n```\r\n\r\n### Start & Finish a Feature branch\r\n```\r\ndef feature = new GitflowFeature(init:init)\r\nfeature.start(\"JIRA-123\")\r\nfeature.finish(\"JIRA-123\")\r\n```\r\n\r\n### Start & Finish a Release branch\r\n```\r\ndef release = new GitflowRelease(init:init)\r\nrelease.start(\"1.0\")\r\nrelease.finish(\"1.0\")\r\n```\r\n\r\n### Start & Finish a Hotfix branch\r\n```\r\ndef hotfix = new GitflowHotfix(init:init)\r\nhotfix.start(\"1.0.1\")\r\nhotfix.finish(\"1.0.1\")\r\n```\r\n\r\n### Start a Support branch\r\n```\r\ndef support = new GitflowSupport(init:init, startCommit:\"1.0\")\r\nsupport.start(\"\")\r\n```\r\n\r\n### Authors and Contributors\r\nDesmond (Dessie) Kirrane (@dkirrane)\r\n","google":"UA-48734566-1","note":"Don't delete this file! It's used internally to help with page regeneration."}